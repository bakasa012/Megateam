{"version":3,"sources":["views/Login/components/LoginForm/LoginForm.js","views/Login/Login.js"],"names":["schema","email","presence","allowEmpty","message","password","useStyles","makeStyles","theme","root","fields","margin","spacing","display","flexWrap","flexGrow","submitButton","marginTop","width","LoginForm","props","className","rest","classes","router","useRouter","dispatch","useDispatch","useState","setLoading","isValid","values","touched","errors","formState","setFormState","useEffect","validate","handleChange","event","persist","target","name","type","checked","value","handleSubmit","a","preventDefault","hasError","login","then","res","history","push","catch","err","console","log","field","clsx","onSubmit","TextField","error","fullWidth","helperText","label","onChange","variant","Button","color","disabled","size","height","alignItems","justifyContent","padding","card","breakpoints","md","maxWidth","overflow","position","flexBasis","content","media","borderTopRightRadius","borderBottomRightRadius","palette","white","flexDirection","down","icon","backgroundImage","gradients","green","borderRadius","shape","top","left","fontSize","loginForm","divider","person","avatar","marginRight","Login","useSelector","state","session","isLoggedIn","to","title","Card","CardContent","Typography","gutterBottom","Divider","Link","align","component","RouterLink","underline","CardMedia","image","Avatar","alt","src"],"mappings":"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","file":"static/js/2.14d66863.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport React, { useState, useEffect } from 'react';\r\nimport validate from 'validate.js';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch,useSelector } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Button, TextField } from '@material-ui/core';\r\n\r\nimport useRouter from 'utils/useRouter';\r\nimport {  login } from 'redux/actions/auth';\r\n//re\r\nconst schema = {\r\n  email: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    email: true\r\n  },\r\n  password: {\r\n    presence: { allowEmpty: false, message: 'is required' }\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  fields: {\r\n    margin: theme.spacing(-1),\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    '& > *': {\r\n      flexGrow: 1,\r\n      margin: theme.spacing(1)\r\n    }\r\n  },\r\n  submitButton: {\r\n    marginTop: theme.spacing(2),\r\n    width: '100%'\r\n  }\r\n}));\r\n\r\nconst LoginForm = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const router = useRouter();\r\n  const dispatch = useDispatch();\r\n  const [loading, setLoading] = useState(false);\r\n  const [formState, setFormState] = useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  useEffect(() => {\r\n    const errors = validate(formState.values, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...formState,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {}\r\n    }));\r\n  }, [formState.values]);\r\n\r\n  const handleChange = event => {\r\n    event.persist();\r\n\r\n    setFormState(formState => ({\r\n      ...formState,\r\n      values: {\r\n        ...formState.values,\r\n        [event.target.name]:\r\n          event.target.type === 'checkbox'\r\n            ? event.target.checked\r\n            : event.target.value\r\n      },\r\n      touched: {\r\n        ...formState.touched,\r\n        [event.target.name]: true\r\n      }\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n    setLoading(true);\r\n\r\n\r\n    if (!hasError('email') && !hasError('password'))\r\n      dispatch(login(formState.values.email, formState.values.password))\r\n        .then((res) => {\r\n          router.history.push(\"/\");\r\n        }).catch((err) => {\r\n          console.log(\"error data :\", err);\r\n          setLoading(false);\r\n        })\r\n    else setLoading(false);\r\n    // console.log(1203, \"event\", formState.values)\r\n    // dispatch(loginMockApi(formState.values.email,formState.values.password));\r\n    // dispatch(login(formState.values.email,formState.values.password))\r\n    // .then(()=>{\r\n    //   console.log(1203,\"localStorage\",localStorage.getItem('user'));\r\n    // })\r\n    // router.history.push('/');\r\n  };\r\n\r\n  const hasError = field =>\r\n    formState.touched[field] && formState.errors[field] ? true : false;\r\n    \r\n  \r\n  return (\r\n    <form\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <div className={classes.fields}>\r\n        <TextField\r\n          error={hasError('email')}\r\n          fullWidth\r\n          helperText={hasError('email') ? formState.errors.email[0] : null}\r\n          label=\"Email address\"\r\n          name=\"email\"\r\n          onChange={handleChange}\r\n          value={formState.values.email || ''}\r\n          variant=\"outlined\"\r\n        />\r\n        <TextField\r\n          error={hasError('password')}\r\n          fullWidth\r\n          helperText={\r\n            hasError('password') ? formState.errors.password[0] : null\r\n          }\r\n          label=\"Password\"\r\n          name=\"password\"\r\n          onChange={handleChange}\r\n          type=\"password\"\r\n          value={formState.values.password || ''}\r\n          variant=\"outlined\"\r\n        />\r\n      </div>\r\n      <Button\r\n        className={classes.submitButton}\r\n        color=\"secondary\"\r\n        disabled={!formState.isValid}\r\n        size=\"large\"\r\n        type=\"submit\"\r\n        variant=\"contained\"\r\n      >\r\n        Sign in\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nLoginForm.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from 'react';\r\nimport { Link as RouterLink, Redirect } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  Typography,\r\n  Divider,\r\n  Link,\r\n  Avatar\r\n} from '@material-ui/core';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\n\r\nimport { Page } from 'components';\r\nimport gradients from 'utils/gradients';\r\nimport { LoginForm } from './components';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: theme.spacing(6, 2)\r\n  },\r\n  card: {\r\n    width: theme.breakpoints.values.md,\r\n    maxWidth: '100%',\r\n    overflow: 'unset',\r\n    display: 'flex',\r\n    position: 'relative',\r\n    '& > *': {\r\n      flexGrow: 1,\r\n      flexBasis: '50%',\r\n      width: '50%'\r\n    }\r\n  },\r\n  content: {\r\n    padding: theme.spacing(8, 4, 3, 4)\r\n  },\r\n  media: {\r\n    borderTopRightRadius: 4,\r\n    borderBottomRightRadius: 4,\r\n    padding: theme.spacing(3),\r\n    color: theme.palette.white,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-end',\r\n    [theme.breakpoints.down('md')]: {\r\n      display: 'none'\r\n    }\r\n  },\r\n  icon: {\r\n    backgroundImage: gradients.green,\r\n    color: theme.palette.white,\r\n    borderRadius: theme.shape.borderRadius,\r\n    padding: theme.spacing(1),\r\n    position: 'absolute',\r\n    top: -32,\r\n    left: theme.spacing(3),\r\n    height: 64,\r\n    width: 64,\r\n    fontSize: 32\r\n  },\r\n  loginForm: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  divider: {\r\n    margin: theme.spacing(2, 0)\r\n  },\r\n  person: {\r\n    marginTop: theme.spacing(2),\r\n    display: 'flex'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst Login = () => {\r\n  const classes = useStyles();\r\n  const session = useSelector(state => state.session)\r\n  if (session.isLoggedIn) {\r\n    return <Redirect to=\"/presentation\" />\r\n  }\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Login\"\r\n    >\r\n      <Card className={classes.card}>\r\n        <CardContent className={classes.content}>\r\n          <LockIcon className={classes.icon} />\r\n          <Typography\r\n            gutterBottom\r\n            variant=\"h3\"\r\n          >\r\n            Sign in\r\n          </Typography>\r\n          <Typography variant=\"subtitle2\">\r\n            Sign in on the internal platform\r\n          </Typography>\r\n          <LoginForm className={classes.loginForm} />\r\n          <Divider className={classes.divider} />\r\n          <Link\r\n            align=\"center\"\r\n            color=\"secondary\"\r\n            component={RouterLink}\r\n            to=\"/auth/register\"\r\n            underline=\"always\"\r\n            variant=\"subtitle2\"\r\n          >\r\n            Don't have an account?\r\n          </Link>\r\n        </CardContent>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image=\"/images/auth.png\"\r\n          title=\"Cover\"\r\n        >\r\n          <Typography\r\n            color=\"inherit\"\r\n            variant=\"subtitle1\"\r\n          >\r\n            Hella narvwhal Cosby sweater McSweeney's, salvia kitsch before they\r\n            sold out High Life.\r\n          </Typography>\r\n          <div className={classes.person}>\r\n            <Avatar\r\n              alt=\"Person\"\r\n              className={classes.avatar}\r\n              src=\"/images/avatars/avatar_2.png\"\r\n            />\r\n            <div>\r\n              <Typography\r\n                color=\"inherit\"\r\n                variant=\"body1\"\r\n              >\r\n                Ekaterina Tankova\r\n              </Typography>\r\n              <Typography\r\n                color=\"inherit\"\r\n                variant=\"body2\"\r\n              >\r\n                Manager at inVision\r\n              </Typography>\r\n            </div>\r\n          </div>\r\n        </CardMedia>\r\n      </Card>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"sourceRoot":""}